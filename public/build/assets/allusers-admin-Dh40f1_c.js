class i{constructor(){this.init()}init(){document.addEventListener("click",e=>{if(e.target.classList.contains("user-delete-btn")||e.target.closest(".user-delete-btn")){e.preventDefault();const t=e.target.classList.contains("user-delete-btn")?e.target:e.target.closest(".user-delete-btn"),o=t.getAttribute("data-user-id"),s=t.getAttribute("data-user-name");this.showDeleteConfirmation(o,s)}}),document.addEventListener("click",e=>{if(e.target.classList.contains("user-demote-btn")||e.target.closest(".user-demote-btn")){e.preventDefault();const t=e.target.classList.contains("user-demote-btn")?e.target:e.target.closest(".user-demote-btn"),o=t.getAttribute("data-user-id"),s=t.getAttribute("data-user-name");this.showDemoteConfirmation(o,s)}})}showDeleteConfirmation(e,t){typeof Swal<"u"?this.showSweetAlertDeleteConfirmation(e,t):confirm(`Are you sure you want to delete "${t}"? This action cannot be undone and will permanently remove all their data.`)&&this.submitDeleteForm(e)}showDemoteConfirmation(e,t){typeof Swal<"u"?this.showSweetAlertDemoteConfirmation(e,t):confirm(`Are you sure you want to demote "${t}" from professional to regular user? This will remove their professional status and specialization.`)&&this.submitDemoteForm(e)}showSweetAlertDeleteConfirmation(e,t){Swal.fire({title:"Delete User?",text:`Are you sure you want to delete "${t}"? This action cannot be undone and will permanently remove all their data.`,showCancelButton:!0,confirmButtonColor:"#dc3545",cancelButtonColor:"#6c757d",confirmButtonText:"Yes, Delete User",cancelButtonText:"Cancel",reverseButtons:!0,focusCancel:!0,allowOutsideClick:!0,allowEscapeKey:!0,buttonsStyling:!0,icon:!1,iconHtml:"",showClass:{popup:"animate__animated animate__fadeInDown animate__faster"},hideClass:{popup:"animate__animated animate__fadeOutUp animate__faster"}}).then(o=>{o.isConfirmed&&(Swal.fire({title:"Deleting User...",text:"Please wait while we delete the user.",allowOutsideClick:!1,allowEscapeKey:!1,showConfirmButton:!1,icon:!1,didOpen:()=>{Swal.showLoading()}}),this.submitDeleteForm(e))}).catch(o=>{console.error("SweetAlert error:",o),confirm(`Are you sure you want to delete "${t}"? This action cannot be undone and will permanently remove all their data.`)&&this.submitDeleteForm(e)})}showSweetAlertDemoteConfirmation(e,t){Swal.fire({title:"Demote Professional?",text:`Are you sure you want to demote "${t}" from professional to regular user? This will remove their professional status and specialization.`,showCancelButton:!0,confirmButtonColor:"#ffc107",cancelButtonColor:"#6c757d",confirmButtonText:"Yes, Demote",cancelButtonText:"Cancel",reverseButtons:!0,focusCancel:!0,allowOutsideClick:!0,allowEscapeKey:!0,buttonsStyling:!0,icon:!1,iconHtml:"",showClass:{popup:"animate__animated animate__fadeInDown animate__faster"},hideClass:{popup:"animate__animated animate__fadeOutUp animate__faster"}}).then(o=>{o.isConfirmed&&(Swal.fire({title:"Demoting User...",text:"Please wait while we update the user role.",allowOutsideClick:!1,allowEscapeKey:!1,showConfirmButton:!1,icon:!1,didOpen:()=>{Swal.showLoading()}}),this.submitDemoteForm(e))}).catch(o=>{console.error("SweetAlert error:",o),confirm(`Are you sure you want to demote "${t}" from professional to regular user? This will remove their professional status and specialization.`)&&this.submitDemoteForm(e)})}submitDeleteForm(e){const t=document.getElementById(`delete-form-${e}`);t?t.submit():(console.error(`Delete form not found for user ID: ${e}`),Swal.fire({title:"Error",text:"Delete form not found. Please refresh the page and try again.",icon:!1,confirmButtonText:"OK",confirmButtonColor:"#dc3545"}))}submitDemoteForm(e){const t=document.getElementById(`demote-form-${e}`);t?t.submit():(console.error(`Demote form not found for user ID: ${e}`),Swal.fire({title:"Error",text:"Demote form not found. Please refresh the page and try again.",icon:!1,confirmButtonText:"OK",confirmButtonColor:"#ffc107"}))}}class a{constructor(){this.init()}init(){this.displaySessionMessages()}displaySessionMessages(){const e=this.getSessionMessage("success");e&&this.showSuccessToast(e);const t=this.getSessionMessage("error");t&&this.showErrorToast(t)}getSessionMessage(e){const t=document.querySelector(`[data-session-${e}]`);return t?t.getAttribute(`data-session-${e}`):null}showSuccessToast(e){typeof Swal<"u"&&Swal.fire({icon:"success",title:"Success!",text:e,timer:5e3,timerProgressBar:!0,showConfirmButton:!1,toast:!0,position:"top-end",showCloseButton:!0,didOpen:t=>{t.addEventListener("mouseenter",Swal.stopTimer),t.addEventListener("mouseleave",Swal.resumeTimer)}})}showErrorToast(e){typeof Swal<"u"&&Swal.fire({icon:"error",title:"Error!",text:e,timer:8e3,timerProgressBar:!0,showConfirmButton:!1,toast:!0,position:"top-end",showCloseButton:!0,didOpen:t=>{t.addEventListener("mouseenter",Swal.stopTimer),t.addEventListener("mouseleave",Swal.resumeTimer)}})}}document.addEventListener("DOMContentLoaded",function(){new i,new a;const n=document.querySelector(".search-input");n&&window.innerWidth>768&&n.focus(),document.querySelectorAll("form").forEach(t=>{t.addEventListener("submit",function(){t.querySelectorAll('button[type="submit"]').forEach(s=>{s.disabled=!0;const r=s.innerHTML;s.innerHTML='<i class="fas fa-spinner fa-spin"></i> Processing...',setTimeout(()=>{s.disabled=!1,s.innerHTML=r},1e4)})})}),document.querySelectorAll('a[href^="#"]').forEach(t=>{t.addEventListener("click",function(o){o.preventDefault();const s=document.querySelector(this.getAttribute("href"));s&&s.scrollIntoView({behavior:"smooth",block:"start"})})})});
